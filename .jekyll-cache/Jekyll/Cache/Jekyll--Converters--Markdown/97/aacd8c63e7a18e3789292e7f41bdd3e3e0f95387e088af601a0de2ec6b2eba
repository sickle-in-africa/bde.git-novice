I"≠<p>We‚Äôll start by exploring how version control can be used
to keep track of what one person did and when.
Even if you aren‚Äôt collaborating with other people,
automated version control is much better than this situation:</p>

<p><a href="http://www.phdcomics.com"><img src="../fig/phd101212s.png" alt="Piled Higher and Deeper by Jorge Cham, http://www.phdcomics.com/comics/archive_print.php?comicid=1531" /></a></p>

<p>‚ÄúPiled Higher and Deeper‚Äù by Jorge Cham, http://www.phdcomics.com</p>

<p>We‚Äôve all been in this situation before: it seems ridiculous to have
multiple nearly-identical versions of the same document. Some word
processors let us deal with this a little better, such as Microsoft
Word‚Äôs 
<a href="https://support.office.com/en-us/article/Track-changes-in-Word-197ba630-0f5f-4a8e-9a77-3712475e806a">Track Changes</a>, 
Google Docs‚Äô <a href="https://support.google.com/docs/answer/190843?hl=en">version history</a>, or 
LibreOffice‚Äôs <a href="https://help.libreoffice.org/Common/Recording_and_Displaying_Changes">Recording and Displaying Changes</a>.</p>

<p>Version control systems start with a base version of the document and
then record changes you make each step of the way. You can
think of it as a recording of your progress: you can rewind to start at the base
document and play back each change you made, eventually arriving at your
more recent version.</p>

<p><img src="../fig/play-changes.svg" alt="Changes Are Saved Sequentially" /></p>

<p>Once you think of changes as separate from the document itself, you
can then think about ‚Äúplaying back‚Äù different sets of changes on the base document, ultimately
resulting in different versions of that document. For example, two users can make independent
sets of changes on the same document.</p>

<p><img src="../fig/versions.svg" alt="Different Versions Can be Saved" /></p>

<p>Unless multiple users make changes to the same section of the document - a conflict - you can 
incorporate two sets of changes into the same base document.</p>

<p><img src="../fig/merge.svg" alt="Multiple Versions Can be Merged" /></p>

<p>A version control system is a tool that keeps track of these changes for us,
effectively creating different versions of our files. It allows us to decide
which changes will be made to the next version (each record of these changes is
called a <a href="../reference.html#commit">commit</a>), and keeps useful metadata
about them. The complete history of commits for a particular project and their
metadata make up a <a href="../reference.html#repository">repository</a>.
Repositories can be kept in sync across different computers, facilitating
collaboration among different people.</p>

<blockquote class="callout">
  <h2 id="the-long-history-of-version-control-systems">The Long History of Version Control Systems</h2>

  <p>Automated version control systems are nothing new.
Tools like RCS, CVS, or Subversion have been around since the early 1980s and are used by 
many large companies.
However, many of these are now considered legacy systems (i.e., outdated) due to various 
limitations in their capabilities.
More modern systems, such as Git and <a href="https://swcarpentry.github.io/hg-novice/">Mercurial</a>,
are <em>distributed</em>, meaning that they do not need a centralized server to host the repository.
These modern systems also include powerful merging tools that make it possible for 
multiple authors to work on
the same files concurrently.</p>
</blockquote>

<blockquote class="challenge">
  <h2 id="paper-writing">Paper Writing</h2>

  <ul>
    <li>
      <p>Imagine you drafted an excellent paragraph for a paper you are writing, but later ruin 
it. How would you retrieve the <em>excellent</em> version of your conclusion? Is it even possible?</p>
    </li>
    <li>
      <p>Imagine you have 5 co-authors. How would you manage the changes and comments 
they make to your paper?  If you use LibreOffice Writer or Microsoft Word, what happens if 
you accept changes made using the <code class="language-plaintext highlighter-rouge">Track Changes</code> option? Do you have a 
history of those changes?</p>
    </li>
  </ul>

  <blockquote class="solution">
    <h2 id="solution">Solution</h2>

    <ul>
      <li>
        <p>Recovering the excellent version is only possible if you created a copy
of the old version of the paper. The danger of losing good versions
often leads to the problematic workflow illustrated in the PhD Comics
cartoon at the top of this page.</p>
      </li>
      <li>
        <p>Collaborative writing with traditional word processors is cumbersome.
Either every collaborator has to work on a document sequentially
(slowing down the process of writing), or you have to send out a
version to all collaborators and manually merge their comments into
your document. The ‚Äòtrack changes‚Äô or ‚Äòrecord changes‚Äô option can
highlight changes for you and simplifies merging, but as soon as you
accept changes you will lose their history. You will then no longer
know who suggested that change, why it was suggested, or when it was
merged into the rest of the document. Even online word processors like
Google Docs or Microsoft Office Online do not fully resolve these
problems.</p>
      </li>
    </ul>
  </blockquote>
</blockquote>
:ET